<?php
/**
 * @file
 * Handles the creation/display of islandora:markupEditorCModel objects.
 */

global $base_url;

define('ISLANDORA_OPEN_ANNOTATION_VIEW', 'view open annotations');
define('ISLANDORA_OPEN_ANNOTATION_CREATE', 'create open annotations');

define('ISLANDORA_CWRC_ENTITY_VIEW', 'view entity');
define('ISLANDORA_CWRC_ENTITY_CREATE', 'create entity');


define('ISLANDORA_OPEN_ANNOTATION_API_BASE', 'islandora/markupeditor/oa/');
define('ISLANDORA_OPEN_ANNOTATION_API_HASTARGET', ISLANDORA_OPEN_ANNOTATION_API_BASE . 'hasTarget/');
define('ISLANDORA_OPEN_ANNOTATION_API_MINTURI', ISLANDORA_OPEN_ANNOTATION_API_BASE . 'mintURI');
define('ISLANDORA_OPEN_ANNOTATION_API', ISLANDORA_OPEN_ANNOTATION_API_BASE . 'annotation');

define('ISLANDORA_MARKUPEDITOR_API_SETUP', 'islandora/markupeditor/setup/');
define('ISLANDORA_MARKUPEDITOR_API_UPDATE', 'islandora/markupeditor/save_data/');
define('ISLANDORA_MARKUPEDITOR_API_VIEW', 'islandora/object/%s/datastream/OBJ/view');

define('ISLANDORA_CWRC_ENTITES_API', 'services/ccm-api');
define('ISLANDORA_CWRC_ENTITES_API_PLACE', ISLANDORA_CWRC_ENTITES_API . '/place');
define('ISLANDORA_CWRC_ENTITES_API_PLACE_SEARCH', ISLANDORA_CWRC_ENTITES_API_PLACE . '/search');
define('ISLANDORA_CWRC_ENTITES_API_PERSON', ISLANDORA_CWRC_ENTITES_API . '/person');
define('ISLANDORA_CWRC_ENTITES_API_PERSON_SEARCH', ISLANDORA_CWRC_ENTITES_API_PERSON. '/search');
define('ISLANDORA_CWRC_ENTITES_API_ORGANIZATION', ISLANDORA_CWRC_ENTITES_API . '/organization');
define('ISLANDORA_CWRC_ENTITES_API_ORGANIZATION_SEARCH', ISLANDORA_CWRC_ENTITES_API_ORGANIZATION . '/search');
define('ISLANDORA_CWRC_ENTITES_API_TITLE', ISLANDORA_CWRC_ENTITES_API . '/title');
define('ISLANDORA_CWRC_ENTITES_API_TITLE_SEARCH', ISLANDORA_CWRC_ENTITES_API_TITLE. '/search');


define('ISLANDORA_CWRC_ENTITES_PERSON_DS_ID', 'PERSON');

define('ISLANDORA_CWRC_ENTITES_REQUEST_CONTENT_PARAM', 'data');

/**
 * Implements hook_menu().
 */
function islandora_markup_editor_menu() {
  $items[ISLANDORA_MARKUPEDITOR_API_SETUP . '%islandora_object'] = array(
    'title' => 'Markup Editor Setup',
    'page callback' => 'islandora_markup_editor_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks.inc',
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 3),
  );

  $items[ISLANDORA_MARKUPEDITOR_API_UPDATE . '%islandora_object'] = array(
    'title' => 'Save Data',
    'page callback' => 'islandora_markup_editor_savedata',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks.inc',
    'access callback' => 'islandora_object_access_callback',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER, 3),
  );


  // depricated
  // $items[ISLANDORA_OPEN_ANNOTATION_API_HASTARGET ."_old". '%'] = array(
    // 'title' => 'Open Annotation hasTarget Query',
    // 'page callback' => 'islandora_markup_editor_oa_hasTarget_old',
    //'page arguments' => array(4),
    //'type' => MENU_CALLBACK,
    //'file' => 'includes/callbacks_oa.inc',
    //'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_VIEW),
  //);
  // depricated
  //$items[ISLANDORA_OPEN_ANNOTATION_API."_old"] = array(
    //'title' => 'Open Annotation Creation',
    //'page callback' => 'islandora_markup_editor_oa_annotation_old',
    //'page arguments' => array(4),
    //'type' => MENU_CALLBACK,
    //'file' => 'includes/callbacks_oa.inc',
    //'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_CREATE),
  //);


  //$items['islandora/markupeditor/oa/mintURI'] = array(
  $items[ISLANDORA_OPEN_ANNOTATION_API_MINTURI] = array(
    'title' => 'Open Annotation URI minting',
    'page callback' => 'islandora_markup_editor_oa_mintURI',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_CREATE),
  );


  $items[ISLANDORA_OPEN_ANNOTATION_API_MINTURI . '/%'] = array(
    'title' => 'Open Annotation URI minting',
    'page callback' => 'islandora_markup_editor_oa_mintURI',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_CREATE),
  );

  $items[ISLANDORA_OPEN_ANNOTATION_API_HASTARGET . '%'] = array(
    'title' => 'Open Annotation hasTarget Query',
    'page callback' => 'islandora_markup_editor_oa_hasTarget',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_VIEW),
  );

  $items[ISLANDORA_OPEN_ANNOTATION_API] = array(
    'title' => 'Open Annotation Creation',
    'page callback' => 'islandora_markup_editor_oa_annotation',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_CREATE),
  );
  $items[ISLANDORA_OPEN_ANNOTATION_API . '%'] = array(
    'title' => 'Open Annotation Creation',
    'page callback' => 'islandora_markup_editor_oa_annotation',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(ISLANDORA_OPEN_ANNOTATION_CREATE),
  );


  // ===== ENTITIES
  
  
 
  // search
  //$items[ISLANDORA_CWRC_ENTITES_API_PERSON_SEARCH] = array(
  //
  $items['islandora/z'] = array(
    'title' => 'Person Entity Search',
    'page callback' => 'islandora_markup_editor_entity_search',
    'page arguments' => array(
      'info:fedora/cwrc:person-entityCModel'
      , array('cwrc_entity_person_preferredForm_et','cwrc_entity_person_variantForm_et')
      ),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(ISLANDORA_CWRC_ENTITY_VIEW),
  );


  module_load_include('inc', 'islandora_workflow_rest', 'includes/basic_enum');      

  // PERSON Entity
  //$items[ISLANDORA_CWRC_ENTITES_API_PERSON] = array(
  $items['islandora/z/person'] = array(
    'title' => 'Person Entity REST Creation',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(ISLANDORA_CWRC_ENTITY_CREATE),
    'page callback' => 'islandora_markup_editor_entities',
    'page arguments' => array(
      NULL 
      , 'info:fedora/cwrc:person-entityCModel'
      , 'cwrc:d3c004f1-2b3f-4e51-a679-4f1c0da4fe17'
      , array(
          WorkflowConst::STAMP => 'cwrc:cre'
          , WorkflowConst::CATEGORY => 'created'
          , WorkflowConst::STATUS => 'c'
        )
      , '/xml/entity_to_dc.xsl'
      , ISLANDORA_CWRC_ENTITES_PERSON_DS_ID
      ),
    'type' => MENU_CALLBACK,
  );


  //$items[ISLANDORA_CWRC_ENTITES_API_PERSON . '%'] = array(
  $items['islandora/z/person/%'] = array(
    'title' => 'Person Entity REST endpoint',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(ISLANDORA_CWRC_ENTITY_CREATE),
    'page callback' => 'islandora_markup_editor_entities',
    'page arguments' => array(
      3 
      , NULL
      , NULL
      , array(
          WorkflowConst::STAMP => 'cwrc:evr'
          , WorkflowConst::CATEGORY => 'content_contribution'
          , WorkflowConst::STATUS => 'c'
        )
      , '/xml/entity_to_dc.xsl'
      , ISLANDORA_CWRC_ENTITES_PERSON_DS_ID
      ),
  );





  return $items;
}


/**
 * Implements hook_permission().
 */
function islandora_markup_editor_permission() {
  return array(
    ISLANDORA_OPEN_ANNOTATION_VIEW => array(
      'title' => t('View open annotations'),
      'description' => t('View open annotations.'),
    ),
    ISLANDORA_OPEN_ANNOTATION_CREATE => array(
      'title' => t('Create open annotations'),
      'description' => t('Create open Annotations'),
    ),
    ISLANDORA_CWRC_ENTITY_VIEW => array(
      'title' => t('View entity'),
      'description' => t('View entity'),
    ),
    ISLANDORA_CWRC_ENTITY_CREATE => array(
      'title' => t('Create entity'),
      'description' => t('Create entity'),
    ),
  );
}



/**
 * Implements hook_islandora_required_objects().
 */
function islandora_markup_editor_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  // Markup Editor Content Model.
  $markup_editor_model = $connection->repository->constructObject('islandora:markupEditorCModel');
  $markup_editor_model->owner = 'fedoraAdmin';
  $markup_editor_model->label = 'Islandora Markup Editor Content Model';
  $markup_editor_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $markup_editor_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_ds_composite_model.xml", FALSE);
  $markup_editor_model->ingestDatastream($datastream);
  // Markup Editor Collection.
  $markup_editor_collection = $connection->repository->constructObject('islandora:markup_editor_collection');
  $markup_editor_collection->owner = 'fedoraAdmin';
  $markup_editor_collection->label = 'Markup Editor Collection';
  $markup_editor_collection->models = 'islandora:collectionCModel';
  $markup_editor_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', variable_get('islandora_repository_pid', 'islandora:root'));
  // Collection Policy Datastream.
  $datastream = $markup_editor_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_markup_editor_collection_policy.xml", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $markup_editor_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $markup_editor_collection->ingestDatastream($datastream);

  return array(
    'islandora_markup_editor' => array(
      'title' => 'Islandora markup editor',
      'objects' => array(
        $markup_editor_model,
        $markup_editor_collection,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_markup_editor_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  return array(
    'Markup Editor MODS form' => array(
      'form_file' => "$module_path/xml/islandora_markup_editor_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_markup_editor_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_markup_editor_mods_form' => array(
      'content_model' => 'islandora:markupEditorCModel',
      'form_name' => 'Markup Editor MODS form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_markup_editor_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_markup_editor' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-markup-editor',
      'pattern' => 'islandora_markup_editor__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_library().
 */
function islandora_markup_editor_library() {
  $module_path = drupal_get_path('module', 'islandora_markup_editor');
  $items = array();
  $items['cwrcwriter'] = array(
    'title' => t('CWRC-Writer Library'),
    'version' => '1.0',
    'js' => array(
      "$module_path/CWRC-Writer/src/js/config.js" => array(),
      "$module_path/CWRC-Writer/src/js/lib/require/require.js" => array(),
      "$module_path/CWRC-Writer/src/js/layout.js" => array(),
    ),
    'css' => array(
      "$module_path/CWRC-Writer/src/css/editor.css" => array(),
      "$module_path/CWRC-Writer/src/css/style.css" => array(),
      "$module_path/CWRC-Writer/src/css/islandora_style.css" => array(),
      "$module_path/CWRC-Writer/src/css/layout-default-latest.css" => array(),
      "$module_path/CWRC-Writer/src/js/lib/jstree/themes/cwrc/style.css" => array(),
      "$module_path/CWRC-Writer/src/js/lib/snippet/jquery.snippet.css" => array(),
      "$module_path/CWRC-Writer/src/smoothness/jquery-ui-1.10.4.custom.css" => array(),
      "$module_path/CWRC-Writer/src/js/lib/bootstrap/bootstrap.css" => array(),
      "$module_path/CWRC-Writer/src/js/cwrcDialogs/css/datepicker.css" => array(),
      "$module_path/CWRC-Writer/src/js/cwrcDialogs/css/cD.css" => array(),
    ),
  );
  return $items;
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_markup_editor_islandora_markupEditorCModel_islandora_view_object($object, $page_number, $page_size) {
  return theme('islandora_markup_editor', array('islandora_object' => $object));
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_markup_editor_islandora_markupEditorCModel_islandora_ingest_steps() {
  return array(
    'islandora_tei_upload' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_markup_editor_tei_upload_form',
      'module' => 'islandora_markup_editor',
      'file' => 'includes/tei_upload.form.inc',
    ),
  );
}
